<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.5//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_5.dtd'>
<nta>
	<declaration>// Place global declarations here.


clock t;
clock d; 

double d_e = 0.1;
double t_e = 0.1;
double cost = 0.0;

const int N = 2;
typedef int[0,N-1] action_t;
// action 0 = fast, action 1 = slow
double d_delta[N] = {0.3,0.15};
double t_delta[N] = {0.1,0.2};
double act_cost[N] = {3.0, 1.0};

int pick = 0;
int nsteps = 0;
int stepsum = 0;</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>// Place local declarations here.

int act = 0;</declaration>
		<location id="id0" x="-272" y="-8">
			<name x="-282" y="-42">P</name>
			<urgent/>
		</location>
		<location id="id1" x="-102" y="-8">
			<name x="-112" y="-42">W1</name>
			<urgent/>
		</location>
		<location id="id2" x="102" y="-8">
			<name x="92" y="-42">Done</name>
			<label kind="invariant" x="128" y="-17">t'==0 &amp;&amp;
d'==0</label>
			<label kind="exponentialrate" x="92" y="26">1</label>
		</location>
		<location id="id3" x="-187" y="-8">
			<name x="-197" y="-42">W</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition id="id4" controllable="false">
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="assignment" x="-212" y="68">d = d + d_delta[act] - d_e + random(d_e*2.0),
t = t + t_delta[act] - t_e + random(t_e*2.0),
cost = cost + act_cost[act],
pick = act,
++nsteps,
stepsum+=act</label>
		</transition>
		<transition id="id5" controllable="false">
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="comments" x="161" y="-178">hack to avoid issue with step-bound based simlation in uppaal.</label>
			<nail x="178" y="-119"/>
			<nail x="204" y="-85"/>
		</transition>
		<transition id="id6" controllable="false">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-68" y="-25">d &gt;= 1.0 &amp;&amp; t &lt; 1.0</label>
			<label kind="assignment" x="-68" y="-8">cost = cost + 0</label>
		</transition>
		<transition id="id7" controllable="false">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-42" y="-119">t &gt;= 1.0</label>
			<label kind="assignment" x="-42" y="-102">cost = cost + 20</label>
			<nail x="0" y="-85"/>
		</transition>
		<transition id="id8" controllable="false">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-177" y="-127">d &lt; 1.0 &amp;&amp;
t &lt; 1.0</label>
			<nail x="-102" y="-93"/>
			<nail x="-272" y="-93"/>
		</transition>
		<transition id="id9">
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="select" x="-297" y="8">i : action_t</label>
			<label kind="guard" x="-204" y="-212">true /*i == (
	(d+0.0) &lt; (t+0.0)
        ? 1 : 0)*/</label>
			<label kind="assignment" x="-297" y="25">act = i</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
P = Template();
// List one or more processes to be composed into a system.
system P;
    </system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
